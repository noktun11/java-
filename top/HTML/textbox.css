 /*속성으로는
    margin : 바깥쪽여백
    border : 테두리
    padding : 안쪽여백
    width, height : 콘텐츠 영역
    border : 선 두께, 선 모양, 선 색상
     - none : 기본값 선없음
     - solid : 실선
     - dotted : 점선
     - deshed : 바느질선
     - double : 이중선(최소3px)
    box-sizing
    box-sizing 속성은 다음 키워드 중 하나를 가진다.
    
    content-box는 기본 CSS 박스 크기 결정법을 사용한다. 요소의 너비를 100 픽셀로 설정하면 콘텐츠 영역이 100 픽셀 너비를 가지고, 테두리와 안쪽 여백은 이에 더해진다.
    border-box는 테두리와 안쪽 여백의 크기도 요소의 크기로 고려한다. 너비를 100 픽셀로 설정하고 테두리와 안쪽 여백을 추가하면, 콘텐츠 영역이 줄어들어 총 너비 100 픽셀을 유지한다. 대부분의 경우 이 편이 크기를 조절할 때 용이하다.
    
    박스에서 글자(내용)들이 넘칠 때 overflow 라는 속성을 사용할 수 있다.
     - visible (기본값) : 보이게 하는 것. 즉 박스 바깥으로 글자들이 다 삐져나온 채 표시된다.
     - hidden : 숨김. 박스 바깥으로 삐져나오는 내용들을 숨긴다.
     - scroll : 상하좌우 스크롤 바를 생성한다.
     - auto : 편의에 맞게 자동으로 맞추어 표시해준다.
     
    display : block  - 인라인 요소를 블록요소로 변경시켜 화면의 넓이만큼 한 줄 차지
              : inline  - 블록요소를 인라인요소로 변경시켜 넓이,높이만큼 영역 차지
              : inline-block - 인라인요소, 블록요소의 성질을 동시에 가짐
              : none  - 해당요소를 화면에 표시하지 않음.
     
    블록 요소의 가로 정렬
    float : none - 기본값
           : left - 박스 왼쪽 정렬
           : right - 박스 오른쪽 정렬*/




/*==========글자체및 초기화==========*/
    @charset "UTF-8";
@font-face { font-family: 'font'; 
    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_nine_@1.1/BBTreeGB.woff') 
    format('woff'); font-weight: normal; font-style: normal; }

    *,
    *::before,
    *::after {
        margin: 0;
        padding: 0;
        box-sizing: border-box
    }

/*==========변수 정의==========*/
    :root {
	--base-font-color: #000;
	--main-font-color: #f9c02d;
	--main-link-color: #666;
	--base-font-size: 16px;
	--point-font-size: 20px;	
}

/*==========공통 스타일 정의==========*/
    /*모든 div, p, h1, li 등은 display : block 속성을 주지 않아도 기본적으로 내장되어있습니다. 

그래서 p태그나 div태그를 그냥 사용하면 한 행을 전부 차지하게 됩니다. 

이게 싫다면 display 속성을 다른 것으로 부여해주면 됩니다.

display : inline, (항상 옆으로 채워지는 폭과 너비가 없는 요소)
          inline-block, (내 크기만큼 차지)
          flex 
          등 여러가지가 있습니다. */

    /*font-size, color, font-family, text-align 이런 속성들은

부모 태그에 쥐어주면 거기 안에 있던 태그들까지 전부 상속됩니다. 

영어로 inherit 된다고합니다. 

안에 글자들이나 태그들이 많을 경우 전부 font-size를 작성안해도 

부모태그에 한번에 작성하고 끝낼 수 있으니 편리합니다. 

다 inherit되는건 아니고 글자와 관련된 스타일들이 주로 inherit 됩니다. */
    .my-box0 {
        /*display : inline, inline-block, flex*/
        border: 1px solid;/*기본 인라인 작성시*/
        border:2px solid red; padding:10px;/*박스테두리 선 종류와 색상 설정*/
        border-radius : 5px;/*모서리 둥글게*/
        padding: 10px;
    }

    .my-box1 {/*선 종류*/
        border-top:1px solid; 
        border-bottom:10px solid; 
        border-left:1px dashed; 
        border-right:1px groove; 
        padding:10px;
    }
    /*=============박스에 텍스트 넣을때 설정=============
    css를 통해서 텍스트를 수직, 수평 정렬 할 수 있습니다.
그 중 vertical-align 속성을 이용하여 수직 정렬을 할 수 있습니다.
이때 주의하실 점은 block 요소가 아닌 inline 또는 inline-block에서만 사용할 수 있습니다.
따라서 display이 속성이 변하지 않은 div, p와 같은 블록레벨 요소에는 적용되지 않습니다.
 
vertical-align 속성
요소의 수직 정렬을 지정하는 속성입니다. (인라인레벨요소에 적용 가능)
 
속성값(기본값:baseline)
1. length : 요소의 길이만큼 올리거나 내리며 음수 값도 사용 가능합니다. (px값 사용 시 baseline을 기준으로 이동)
2. % : 요소를 line-height 기준으로 이동하며 음수 값 사용 가능합니다.
3. 키워드 : baseline, sub, super, top, text-top, middle, bottom, text-bottom
 
baseline은 소문자 x를 기준으로 하단 라인을 의미합니다. 부모요소의 기준 선에 맞춤.
sub 부모 아래 첨자 기준으로 정렬
super : 부모 위 첨자 기준으로 정렬 
text-top : 요소의 맨 위를 부모 font의 맨 위(Ascender 제외)에 맞춤.
text-bottom : 요소의 맨 아래를 부모 font의 맨 아래(Descender 제외)에 맞춤. 
middle : 부모의 중앙에 위치. 소문자x를 기준으로 중앙에 정렬.
top : 요소의 맨위를 줄에서 가장 큰 요소의 맨 위 위치에 맞춤.
bottom : 요소의 맨 아래를 줄에서 가장 낮은 요소에 맞춤.*/
 

    .my-box1 {/*선 컬러*/
        border-top:2px solid blue; 
        border-bottom:2px solid red; 
        border-left:2px solid chartreuse; 
        border-right:2px solid yellow; 
        padding:10px;
    }  

    .main{
        background-color: yellow;
   }

/*박스안에 박스 배치*/
   .main{
    background-color: yellow;
    border: 1px solid red;
    width: 306px;
    height: 102px;
}
   
.main_common{
    /*display: inline;가로 배치시*/
    display:inline-table;
    float: left;
    width: 100px;
    height: 100px;
    border: 1px solid blue;
}
 
.content {
    display: table-cell;
    vertical-align: middle;
    text-align: center;
}
 
.main_1, .main_3 { font-size: 30px; }
.main_2 { font-size: 40px; }

